function serialize(n){if(typeof n=="string")return `'${n}'`;const i=new l;return i.dispatch(n),i.serialized}const l=/*@__PURE__*/function(){class n{serialized="";#t=new Map;write(t){this.serialized+=t;}dispatch(t){return this["$"+(t===null?"null":typeof t)].call(this,t)}compare(t,r){return typeof t=="string"&&typeof r=="string"?t.localeCompare(r):serialize(t).localeCompare(serialize(r))}objectEntries(t,r){const e=Array.from(r).sort((o,a)=>this.compare(o[0],a[0]));this.write(`${t}{`);for(let o=0;o<e.length;o++){const[a,s]=e[o];this.write(`${a}:`),this.dispatch(s),o<e.length-1&&this.write(",");}this.write("}");}$string(t){this.write("'"+t+"'");}$symbol(t){this.write(t.toString());}$bigint(t){this.write(`${t}n`);}$object(t){const r=Object.prototype.toString.call(t);let e="";const o=r.length;o<10?e="unknown:["+r+"]":e=r.slice(8,o-1);let a=null;if((a=this.#t.get(t))===void 0)this.#t.set(t,this.#t.size);else return this.write(`#${a}`);if(e!=="Object"&&e!=="Function"&&e!=="AsyncFunction"){const s=this["$"+e];if(s)s.call(this,t);else {if(typeof t?.entries=="function")return this.objectEntries(e,t.entries());throw new Error(`Cannot serialize ${e}`)}}else {const s=t.constructor.name,c=s==="Object"?"":s;return typeof t.toJSON=="function"?(c&&this.write(c),this.$object(t.toJSON())):this.objectEntries(c,Object.entries(t))}}$function(t){const r=Function.prototype.toString.call(t);if(r.slice(-15)==="[native code] }")return this.write(`${t.name||""}()[native]`);this.write(`${t.name}(${t.length})${r.replace(/\s*\n\s*/g,"")}`);}$Array(t){this.write("[");for(let r=0;r<t.length;r++)this.dispatch(t[r]),r<t.length-1&&this.write(",");this.write("]");}$Date(t){return this.write(`Date(${t.toJSON()})`)}$ArrayBuffer(t){this.write(`ArrayBuffer[${Array.prototype.slice.call(new Uint8Array(t)).join(",")}]`);}$Set(t){this.write("Set"),this.$Array(Array.from(t).sort((r,e)=>this.compare(r,e)));}$Map(t){return this.objectEntries("Map",t.entries())}}for(const i of ["boolean","number","null","undefined"])n.prototype["$"+i]=function(t){return this.write(t)};for(const i of ["Error","RegExp","URL"])n.prototype["$"+i]=function(t){return this.write(`${i}(${t.toString()})`)};for(const i of ["Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array"])n.prototype["$"+i]=function(t){this.write(`${i}[${Array.prototype.slice.call(t).join(",")}]`);};for(const i of ["BigInt64Array","BigUint64Array"])n.prototype["$"+i]=function(t){this.write(`${i}[${Array.prototype.slice.call(t).map(r=>`${r}n`).join(",")}]`);};return n}();

export { serialize as s };
